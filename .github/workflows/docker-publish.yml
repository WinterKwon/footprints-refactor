name: Github Actions for politician-footprints ðŸ‘£
on: 
  push:
    branches:
      - main

jobs:
  Front-docker:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       
     - name: Docker meta
       id: docker_meta
       uses: docker/metadata-action@v4
       with: 
        images: |
          name=taewhale/footprints-client
        tag: |
          {{version}}
          {{major}}.{{minor}}
          
           
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
       
     - name: Login to DockerHub
       uses: docker/login-action@v1
       with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
     - name: Build and Push
       uses: docker/build-push-action@v2
       with: 
        context: .
        file: client/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}

  Back-docker:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       
     - name: Docker meta
       id: docker_meta
       uses: docker/metadata-action@v4
       with: 
        images: |
          name=taewhale/footprints-server
        tag: |
          {{version}}
          {{major}}.{{minor}}
          
           
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
       
     - name: Login to DockerHub
       uses: docker/login-action@v1
       with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Sets .env
       run: |
        echo ${{ secrets.PORT }} > server/.env
        echo ${{ secrets.MONGODB_URI }} >> server/.env
        echo ${{ secrets.KAKAO_ID }} >> server/.env
        echo ${{ secrets.KAKAO_CB_URL }} >> server/.env
        echo ${{ secrets.JWT_SECRET_KEY }} >> server/.env
        echo ${{ secrets.AES_KEY}} >> server/.env
        echo ${{ secrets.CLIENT_HOST}} >> server/.env
          
     - name: Build and Push
       uses: docker/build-push-action@v2
       with: 
        context: .
        file: server/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    
  SSH:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Scripts in EC2
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST }} 
          username: ${{ secrets.USER }}
          script: |
            docker pull taewhale/footprints-client:main 
            docker pull taewhale/footprints-server:main  
            docker rm -f $(docker ps -qa) 
            docker rmi $(docker images -f "dangling=true" -q)
            docker-compose up -d
    needs: [Front-docker, Back-docker]
          
